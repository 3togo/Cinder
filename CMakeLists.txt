cmake_minimum_required( VERSION 3.0 FATAL_ERROR )
set( CMAKE_VERBOSE_MAKEFILE ON )

project( cinder )


set( CINDER_TARGET "" CACHE STRING "Target platform to build for." )
set( CINDER_TARGET_GL "" CACHE STRING "Target GL for the system. Valid options : ogl, es2, es3, es31, es32, es2-rpi" )
option( CINDER_BUILD_SAMPLES "Build Samples" OFF )
option( CINDER_FREETYPE_USE_SYSTEM "Use system-detected freetype2 rather than the one that ships with cinder" OFF )

set( CINDER_ROOT      "${CMAKE_CURRENT_SOURCE_DIR}" )
set( CINDER_CMAKE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/proj/cmake" )

# If there's a target specified, try to build for that. Otherwise, build based the current host OS.
if( CINDER_TARGET )
	string( TOLOWER "${CINDER_TARGET}" CINDER_TARGET_LOWER )
	if( "android" STREQUAL "${CINDER_TARGET_LOWER}" )
		set( CINDER_ANDROID TRUE )
		include( "${CMAKE_CURRENT_SOURCE_DIR}/proj/cmake/platform_android.cmake" )
	elseif( "ios" STREQUAL "${CINDER_TARGET_LOWER}" )
		set( CINDER_COCOA_TOUCH TRUE )
		include( "${CMAKE_CURRENT_SOURCE_DIR}/proj/cmake/platform_ios.cmake" )
	elseif( "linux" STREQUAL "${CINDER_TARGET_LOWER}" )
		set( CINDER_LINUX TRUE )
		include( "${CMAKE_CURRENT_SOURCE_DIR}/proj/cmake/platform_linux.cmake" )
	elseif( "macosx" STREQUAL "${CINDER_TARGET_LOWER}" )
		set( CINDER_MAC TRUE )
		include( "${CMAKE_CURRENT_SOURCE_DIR}/proj/cmake/platform_macosx.cmake" )
	elseif( "msw" STREQUAL "${CINDER_TARGET_LOWER}" )
		set( CINDER_MSW TRUE )
		include( "${CMAKE_CURRENT_SOURCE_DIR}/proj/cmake/platform_msw.cmake" )
	else()
		message( FATAL_ERROR "unexpected CINDER_TARGET '${CINDER_TARGET}'." )
	endif()
else()
	if( CMAKE_SYSTEM_NAME MATCHES "Darwin" )
        set( CINDER_TARGET "macosx" )
        set( CINDER_MAC TRUE )
		include( "${CMAKE_CURRENT_SOURCE_DIR}/proj/cmake/platform_macosx.cmake" )
	elseif( CMAKE_SYSTEM_NAME MATCHES "Linux" )
        set( CINDER_TARGET "linux" )
        set( CINDER_LINUX TRUE )
		include( "${CMAKE_CURRENT_SOURCE_DIR}/proj/cmake/platform_linux.cmake" )
	elseif( CMAKE_SYSTEM_NAME MATCHES "Windows" )
		message( WARNING "CMake support on Windows is experimental and may be incomplete." )
		set( CINDER_TARGET "msw" )
        set( CINDER_MSW TRUE )
		include( "${CMAKE_CURRENT_SOURCE_DIR}/proj/cmake/platform_msw.cmake" )
	else()
		message( FATAL_ERROR "CINDER_TARGET not defined, and no default for platform '${CMAKE_SYSTEM_NAME}.'" )
	endif()
endif()

if( CINDER_BUILD_SAMPLES )
	# TODO: move these to separate file and make easier to add new samples
	add_subdirectory( ${CINDER_ROOT}/samples/BasicApp/proj/cmake )
	add_subdirectory( ${CINDER_ROOT}/samples/_audio/NodeBasic/proj/cmake )
	add_subdirectory( ${CINDER_ROOT}/samples/_opengl/Cube/proj/cmake )
	add_subdirectory( ${CINDER_ROOT}/samples/_opengl/NormalMapping/proj/cmake )
	add_subdirectory( ${CINDER_ROOT}/samples/_opengl/ObjLoader/proj/cmake )
endif()
